/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Taskstatus = "DOING" | "DONE" | "TODO";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type Transactiontype = "CREDIT" | "DEBIT";

export interface Asset {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  symbol: string;
  type: string;
  updatedAt: Generated<Timestamp>;
}

export interface AssetValue {
  assetId: string;
  createdAt: Generated<Timestamp>;
  currency: Generated<string>;
  id: Generated<string>;
  timestamp: Generated<Timestamp>;
  value: Numeric;
}

export interface BankStatement {
  accountNumber: string | null;
  bankName: string | null;
  createdAt: Generated<Timestamp>;
  fileName: string;
  filePath: string;
  fileType: string;
  id: Generated<string>;
  processingStatus: Generated<string>;
  statementPeriod: string | null;
  updatedAt: Timestamp;
}

export interface Interest {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  topic: string;
  updatedAt: Timestamp;
}

export interface PortfolioSnapshot {
  createdAt: Generated<Timestamp>;
  currency: Generated<string>;
  id: Generated<string>;
  timestamp: Generated<Timestamp>;
  totalValue: Numeric;
}

export interface Reminder {
  completed: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  reminderTime: Timestamp;
  title: string;
  updatedAt: Timestamp;
}

export interface Task {
  createdAt: Generated<Timestamp>;
  description: string | null;
  dueDate: Timestamp | null;
  id: Generated<string>;
  status: Taskstatus;
  title: string;
  updatedAt: Timestamp;
}

export interface Transaction {
  amount: Numeric;
  balance: Numeric | null;
  bankStatementId: string;
  category: string | null;
  createdAt: Generated<Timestamp>;
  date: Timestamp;
  description: string;
  id: Generated<string>;
  type: Transactiontype;
  updatedAt: Timestamp;
}

export interface DB {
  asset: Asset;
  assetValue: AssetValue;
  bank_statement: BankStatement;
  interest: Interest;
  portfolioSnapshot: PortfolioSnapshot;
  reminder: Reminder;
  task: Task;
  transaction: Transaction;
}
