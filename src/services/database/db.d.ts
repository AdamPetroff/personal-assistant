/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Taskstatus = "DOING" | "DONE" | "TODO";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _PrismaMigrations {
  applied_steps_count: Generated<number>;
  checksum: string;
  finished_at: Timestamp | null;
  id: string;
  logs: string | null;
  migration_name: string;
  rolled_back_at: Timestamp | null;
  started_at: Generated<Timestamp>;
}

export interface Interest {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: string;
  topic: string;
  updatedAt: Timestamp;
}

export interface Interest2 {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  topic: string;
  updatedAt: Generated<Timestamp>;
}

export interface Reminder {
  completed: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: string;
  reminderTime: Timestamp;
  title: string;
  updatedAt: Timestamp;
}

export interface Reminder2 {
  completed: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  reminderTime: Timestamp;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface Task {
  createdAt: Generated<Timestamp>;
  description: string | null;
  dueDate: Timestamp | null;
  id: string;
  status: Taskstatus;
  title: string;
  updatedAt: Timestamp;
}

export interface Task2 {
  createdAt: Generated<Timestamp>;
  description: string | null;
  dueDate: Timestamp | null;
  id: Generated<string>;
  status: Generated<string>;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  _prisma_migrations: _PrismaMigrations;
  interest: Interest2;
  Interest: Interest;
  reminder: Reminder2;
  Reminder: Reminder;
  task: Task2;
  Task: Task;
}
