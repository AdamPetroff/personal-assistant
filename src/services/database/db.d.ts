/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Blockchainnetwork = "arbitrum" | "avalanche" | "base" | "bsc" | "ethereum" | "optimism" | "polygon" | "solana";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Taskstatus = "DOING" | "DONE" | "TODO";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Interest {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  topic: string;
  updatedAt: Timestamp;
}

export interface Reminder {
  completed: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  reminderTime: Timestamp;
  title: string;
  updatedAt: Timestamp;
}

export interface Task {
  createdAt: Generated<Timestamp>;
  description: string | null;
  dueDate: Timestamp | null;
  id: Generated<string>;
  status: Taskstatus;
  title: string;
  updatedAt: Timestamp;
}

export interface Wallet {
  address: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  label: string | null;
  network: Blockchainnetwork;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  interest: Interest;
  reminder: Reminder;
  task: Task;
  wallet: Wallet;
}
